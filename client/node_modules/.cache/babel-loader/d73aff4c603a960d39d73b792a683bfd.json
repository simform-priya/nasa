{"ast":null,"code":"import _asyncToGenerator from\"/home/priya/Desktop/Nasa-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/priya/Desktop/Nasa-project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}// Submit given launch data to launch system.\nfunction _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}// Delete launch with given ID.\nfunction _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/launches/\").concat(id),{method:\"delete\"});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/home/priya/Desktop/Nasa-project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"6PAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,CACA;QACeC,CAAAA,c,iDAKf;mGALA,sKAC0BC,CAAAA,KAAK,WAAIF,OAAJ,aAD/B,QACQG,QADR,qCAEgBA,CAAAA,QAAQ,CAACC,IAAT,EAFhB,6G,yDAMeC,CAAAA,e,kDAQf;qGARA,0LACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,uCAE8BA,CAAAA,QAAQ,CAACC,IAAT,EAF9B,QAEQE,aAFR,iDAGSA,aAAa,CAACC,IAAd,CAAmB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAHT,0D,0DASeC,CAAAA,gB,qDAiBf;uGAjBA,kBAAgCC,MAAhC,8JAEiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACvCa,MAAM,CAAE,MAD+B,CAEvCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF8B,CAKvCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALiC,CAAxB,CAFtB,qJAWU,CACJM,EAAE,CAAE,KADA,CAXV,uE,2DAkBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAEiBlB,CAAAA,KAAK,WAAIF,OAAJ,sBAAwBoB,EAAxB,EAA8B,CAC9CP,MAAM,CAAE,QADsC,CAA9B,CAFtB,qJAOa,CACLK,EAAE,CAAE,KADC,CAPb,uE,kDAcA,OACEjB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000';\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response  = await fetch(`${API_URL}/planets`);\n  return  await response.json()\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchLaunches = await response.json();\n  return fetchLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  })\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`, {\n       method: \"post\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify(launch),\n       \n     })\n  } catch(err){\n    return{\n      ok: false,\n    }\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try{\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\",\n    })\n  }catch(err) {\n    {\n      return {\n        ok: false\n      }\n    }\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}